---
- name: Run stack of containers (postgres, flask, nginx)
  hosts: lab
  vars:
    - project_name: students-project-2018
  vars_files:
    - ./vars/vault_vars.yml
  remote_user: user
  become: yes

  tasks:
    - name: Install requirements
      yum:
        name: "{{ item }}"
        state: latest
      loop:
        - python2
        - python2-pip
    - pip:
        name: "{{ item }}" 
      loop:
        - docker-compose

    - name: Copy app's files
      copy:
        src: "{{ playbook_dir }}/../greetings_app"
        dest: "{{ ansible_user_dir }}/{{ project_name }}/"

    - name: Copy proxy conf
      copy:
        src: "{{ playbook_dir }}/../proxy"
        dest: "{{ ansible_user_dir }}/{{ project_name }}/"

    - name: Create data directory for db
      file:
        path: /var/data
        state: directory

    - name: Stop and remove containers
      docker_container:
        name: "{{ item }}"
        state: absent
      loop:
        - app
        - psql
        - nginx

    - name: Create docker-compose and start containers
      docker_service:
        project_name: "{{ project_name }}"
        recreate: always
        definition:
          version: '2'
          services:
            db:
              image: postgres
              container_name: psql
              volumes:
                - /var/data:/var/lib/postgresql/data:rw
              environment:
                - "POSTGRES_USER={{ postgres_user }}"
                - "POSTGRES_PASSWORD={{ postgres_passwd }}"
                - "POSTGRES_DB=greetings"
            web:
              image: "karshkoff/app:{{ lookup('env','APP_TAG_NAME') or 'latest' }}" 
              container_name: app
              environment:
                - "DB_URL=postgresql://{{ postgres_user }}:{{ postgres_passwd }}@psql:5432/greetings"
              depends_on:
                - db
            proxy:
              container_name: nginx
              image: nginx
              volumes:
                - "{{ ansible_user_dir }}/{{ project_name }}/proxy:/etc/nginx/conf.d:ro"
              ports:
                - 80:80
              depends_on:
                - web
